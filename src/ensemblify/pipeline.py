"""
Pipeline - ``ensemblify.pipeline``
==================================

:Author(s): Nuno P. Fernandes
:Year: 2024
:Copyright: GNU Public License v3

.. versionadded:: 1.0.0

All of Ensemblify's main functionalities integrated into one function call.
"""

# IMPORTS
## Standard Library Imports
import os

## Local Imports
from ensemblify.analysis import analyze_trajectory
from ensemblify.conversion import ensemble2traj
from ensemblify.generation import generate_ensemble
from ensemblify.reweighting import reweight_ensemble

# FUNCTIONS
def ensemblify_pipeline(
    parameters: str,
    analysis: bool = True,
    exp_data: str | None = None):
    """Function that uses all the main features of the Ensemblify Python library in sequence.
    
    Consists of 4 main steps:
    
    - Ensemble Generation using ``ensemblify.generation.generate_ensemble``
    
    - Trajectory Creation using ``ensemblify.conversion.ensemble2traj``
    
    - Trajectory Analysis using ``ensemblify.analysis.analyze_trajectory``
    
    - Ensemble Reweighting using ``ensemblify.reweighting.reweight_ensemble``

    Args:
        parameters (str):
            Path to a parameters .yaml file (generated by .html form or manually setup by user).
        analysis (bool):
            Whether to perform the analysis of the ensemble. Defaults to True.
        exp_data (str, optional):
            Path to a .dat file with experimental (SAXS) data of the protein being ensemblified.
            If given, reweighting of the generated ensemble will be performed based on this data.
            Defaults to None.
    """

    # Retrieve information from input parameters
    JOB_NAME = parameters['job_name']
    ENSEMBLE_SIZE = parameters['size']
    OUTPUT_DIR = parameters['output_path']

    # Setup output folder identified by job_name
    OUTPUT_DIR_JOB = os.path.join(OUTPUT_DIR,JOB_NAME)

    assert not os.path.isdir(OUTPUT_DIR_JOB), ('Output directory with the same name found. Are you '
                                               'sure you are not overwriting existing results?')
    os.mkdir(OUTPUT_DIR_JOB)

    # Setup necessary directories for the pipeline
    ## Trajectory creation
    TRAJECTORY_DIR = os.path.join(OUTPUT_DIR_JOB,'trajectory')
    ## Trajectory Analysis
    ANALYSIS_DIR = os.path.join(OUTPUT_DIR_JOB,'analysis')
    ## Reweighting
    REWEIGHTING_DIR = os.path.join(OUTPUT_DIR_JOB,'reweighting')

    # Generate ensemble
    valid_pdbs_dir = generate_ensemble(parameters_path=parameters)

    # Create trajectory
    trajectory_path, topology_path = ensemble2traj(ensemble_dir=valid_pdbs_dir,
                                                   trajectory_dir=TRAJECTORY_DIR,
                                                   trajectory_id=JOB_NAME,
                                                   trajectory_size=ENSEMBLE_SIZE)

    # Analyze trajectory
    analysis_data = {'DistanceMatrices': [None],
                     'ContactMatrices': [None],
                     'SecondaryStructureFrequencies': [None],
                     'StructuralMetrics': [None]}

    if analysis:
        analysis_data = analyze_trajectory(trajectories=trajectory_path,
                                           topologies=topology_path,
                                           trajectory_ids=JOB_NAME,
                                           output_directory=ANALYSIS_DIR)

    # Reweigh ensemble with exp data
    if exp_data is not None:
        reweight_ensemble(trajectory=trajectory_path,
                          topology=topology_path,
                          trajectory_id=JOB_NAME,
                          exp_saxs_data=exp_data,
                          output_dir=REWEIGHTING_DIR,
                          calculated_cmatrix=analysis_data['ContactMatrices'][0],
                          calculated_dmatrix=analysis_data['DistanceMatrices'][0],
                          calculated_ss_frequency=analysis_data['SecondaryStructureFrequencies'][0],
                          calculated_metrics_data=analysis_data['StructuralMetrics'][0])

    print("Ensemblify's pipeline has finished, good luck in your analysis!")
